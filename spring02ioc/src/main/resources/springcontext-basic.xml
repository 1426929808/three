<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 下面的配置顺序与构造函数是一一对应,所以不再需要额外的设置-->
<!--    <bean id="dbconfig" class="com.basic.DbConfig">-->
<!--        -->
<!--        <constructor-arg value="url" ></constructor-arg>-->
<!--        <constructor-arg value="username" ></constructor-arg>-->
<!--        <constructor-arg value="password" ></constructor-arg>-->
<!--        <property name="driver" value="classdriver"></property>-->
<!--    </bean>-->
    <!--

   当下面的构造设置顺序与想复制的类的构造函数顺序不一致时
   不能仅仅只是设置一个value,还需要额外的信息告诉
   spring,谁赋值给谁

    -->
    <bean id="dbconfig" class="com.basic.DbConfig">
        <constructor-arg value="password" name="password"></constructor-arg>
        <constructor-arg value="url" name="url"></constructor-arg>
        <constructor-arg value="username" name="username"></constructor-arg>

        <property name="driver" value="classdriver"></property>
    </bean>
    <!--<bean id="dbConfig" class="inject.basic.DbConfig">

        <constructor-arg value="root" index="1" />
        <constructor-arg value="pwd" index="2"/>
        <constructor-arg value="url.." index="0"/>

        <property name="driverClassname" value="driver"/>
    </bean>-->


    <!--配置时,一般是java类型对应同样名字的配置元素
比如List集合,你就用list来配置,Set集合就用set元素配置

集合类型与配置元素类型都会起作用:意思是Set集合类型的元素里面是不能重复

如果你用List元素配置了重复的内容,但Set集合仍然不会有重复

如果你是List集合,但用set元素来配置,就可以让此List集合内部没有重复-->
<!--测试address类-->
    <bean id="addre" class="com.basic.Address">
        <property name="province" value="广东"></property>
        <property name="city" value="珠海"></property>
    </bean>



<!--    测试Userinfo类-->
    <bean id="addr" class="com.basic.Address">
        <property name="province" value="广东"></property>
        <property name="city" value="广州"></property>
    </bean>
    <bean id="userinfo" class="com.basic.UserInfo">
<!--        name字段-->
        <property name="name" value="这个是name属性值"></property>
        <!-- <property name="address" ref="addr"/>-->
        <!--下面的配置方式叫做inner bean(内部bean)

            只是给address属性使用,无法通过getBean方式得到这个对象
        -->
        <property name="address">
            <bean class="com.basic.Address"></bean>
        </property>
        <property name="addressList">
            <list>
                <ref bean="addr"></ref>
                <bean class="com.basic.Address">
                    <property name="province" value="江西"></property>
                    <property name="city" value="赣州"></property>
                </bean>
            </list>
        </property>
        <property name="hobbyList">
            <list>
                    <value>代码</value>
                    <value>游戏</value>
                    <value>生活</value>
            </list>
        </property>
        <property name="xueli">
            <list>
                <value>高中</value>
                <value>大学</value>
                <value>博士</value>
            </list>
        </property>
        <property name="xuefen">
            <map>
                <entry key="语文" value="90"></entry>
                <entry key="数学" value="100"></entry>
            </map>
        </property>
        <!--如果用props配置,值只能是字符串类型-->
        <property name="properties">
            <props>
                <prop key="语文老师">哈哈哈</prop>
                <prop key="数学老师">嘿嘿嘿</prop>
            </props>
        </property>
    </bean>


</beans>